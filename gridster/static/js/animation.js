// Generated by CoffeeScript 1.8.0
(function() {
  var N, color, glyph, i, linspace, options, plot, r, r_base, r_x, rmax, rmin, theta, update;

  linspace = function(start, end, n) {
    var L, d, i;
    L = new Array();
    d = (end - start) / (n - 1);
    i = 0;
    while (i < (n - 1)) {
      L.push(start + i * d);
      i++;
    }
    L.push(end);
    return L;
  };

  N = 50 + 1;

  r_base = 8;

  theta = linspace(0, 2 * Math.PI, N);

  r_x = linspace(0, 6 * Math.PI, N - 1);

  rmin = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = r_x.length; _i < _len; _i++) {
      r = r_x[_i];
      _results.push(r_base - Math.cos(r) - 1);
    }
    return _results;
  })();

  rmax = (function() {
    var _i, _len, _results;
    _results = [];
    for (_i = 0, _len = r_x.length; _i < _len; _i++) {
      r = r_x[_i];
      _results.push(r_base + Math.sin(r) + 1);
    }
    return _results;
  })();

  color = _.flatten((function() {
    var _i, _results;
    _results = [];
    for (i = _i = 0; _i <= 4; i = ++_i) {
      _results.push(["FFFFCC", "#C7E9B4", "#7FCDBB", "#41B6C4", "#2C7FB8", "#253494", "#2C7FB8", "#41B6C4", "#7FCDBB", "#C7E9B4"]);
    }
    return _results;
  })());

  window.source = Bokeh.Collections('ColumnDataSource').create({
    data: {
      x: (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = rmin.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(0);
        }
        return _results;
      })(),
      y: (function() {
        var _i, _ref, _results;
        _results = [];
        for (i = _i = 0, _ref = rmin.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
          _results.push(0);
        }
        return _results;
      })(),
      inner_radius: rmin,
      outer_radius: rmax,
      start_angle: theta.slice(0, -1),
      end_angle: theta.slice(1),
      color: color
    }
  });

  glyph = {
    type: 'annular_wedge',
    x: 'x',
    y: 'y',
    inner_radius: 'inner_radius',
    outer_radius: 'outer_radius',
    start_angle: 'start_angle',
    end_angle: 'end_angle',
    fill_color: 'color',
    line_color: 'black'
  };

  options = {
    title: "Animation Demo",
    dims: [600, 600],
    xrange: [-11, 11],
    yrange: [-11, 11],
    xaxes: "below",
    yaxes: "left",
    tools: "pan,wheel_zoom,box_zoom,reset,resize"
  };

  plot = Bokeh.Plotting.make_plot(glyph, window.source, options);

  Bokeh.Plotting.show(plot);

  update = function() {
    var data, tmp;
    data = window.source.get('data');
    rmin = data["inner_radius"];
    tmp = [rmin[rmin.length - 1]].concat(rmin.slice(0, -1));
    data["inner_radius"] = tmp;
    rmax = data["outer_radius"];
    tmp = rmax.slice(1).concat([rmax[0]]);
    data["outer_radius"] = tmp;
    window.source.set('data', data);
    return window.source.trigger('change', source, {});
  };

  setInterval(update, 100);

}).call(this);
